[{"C:\\projects\\keycloak-auth\\src\\index.js":"1","C:\\projects\\keycloak-auth\\src\\App.js":"2","C:\\projects\\keycloak-auth\\src\\store\\store.js":"3","C:\\projects\\keycloak-auth\\src\\routes.js":"4","C:\\projects\\keycloak-auth\\src\\utils\\keycloak.js":"5","C:\\projects\\keycloak-auth\\src\\store\\app\\appSlice.js":"6","C:\\projects\\keycloak-auth\\src\\pages\\auth.js":"7","C:\\projects\\keycloak-auth\\src\\pages\\home.js":"8","C:\\projects\\keycloak-auth\\src\\pages\\profile.js":"9","C:\\projects\\keycloak-auth\\src\\components\\common\\LoaderBrice\\index.js":"10","C:\\projects\\keycloak-auth\\src\\containers\\Header.js":"11"},{"size":319,"mtime":1614608865965,"results":"12","hashOfConfig":"13"},{"size":2506,"mtime":1614610712086,"results":"14","hashOfConfig":"13"},{"size":358,"mtime":1614580459927,"results":"15","hashOfConfig":"13"},{"size":1594,"mtime":1614609399291,"results":"16","hashOfConfig":"13"},{"size":286,"mtime":1614583620088,"results":"17","hashOfConfig":"13"},{"size":484,"mtime":1614580459961,"results":"18","hashOfConfig":"13"},{"size":5277,"mtime":1614610300326,"results":"19","hashOfConfig":"13"},{"size":483,"mtime":1614607315527,"results":"20","hashOfConfig":"13"},{"size":494,"mtime":1614606394912,"results":"21","hashOfConfig":"13"},{"size":863,"mtime":1613634476059,"results":"22","hashOfConfig":"13"},{"size":937,"mtime":1614609629658,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fs0zcv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\projects\\keycloak-auth\\src\\index.js",[],["50","51"],"C:\\projects\\keycloak-auth\\src\\App.js",["52","53","54"],"C:\\projects\\keycloak-auth\\src\\store\\store.js",[],"C:\\projects\\keycloak-auth\\src\\routes.js",["55","56"],"import React from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Auth from \"./pages/auth\";\r\nimport LoaderBrice from \"./components/common/LoaderBrice\";\r\n\r\nimport {useKeycloak} from '@react-keycloak/web';\r\nimport Home from \"./pages/home\";\r\nimport Profile from \"./pages/profile\";\r\n\r\nconst AppRouter = () => {\r\n    const {keycloak, initialized} = useKeycloak();\r\n\r\n    console.log('keycloak:', keycloak);\r\n    console.log('initialized:', initialized);\r\n    console.log('keycloak authenticated:', keycloak.authenticated);\r\n\r\n    if (initialized) {\r\n        if (keycloak.authenticated) {\r\n            return (\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/profile\">\r\n                            <Profile/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/home\">\r\n                            <Home/>\r\n                        </Route>\r\n\r\n                        <Redirect to=\"/home\"/>\r\n                    </Switch>\r\n                </Router>\r\n            )\r\n        } else {\r\n            return (\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/auth\">\r\n                            <Auth/>\r\n                        </Route>\r\n\r\n                        <Redirect to=\"/auth\"/>\r\n                    </Switch>\r\n                </Router>\r\n            )\r\n        }\r\n    } else {\r\n        return <LoaderBrice/>;\r\n    }\r\n};\r\n\r\nexport default AppRouter;\r\n","C:\\projects\\keycloak-auth\\src\\utils\\keycloak.js",[],"C:\\projects\\keycloak-auth\\src\\store\\app\\appSlice.js",[],"C:\\projects\\keycloak-auth\\src\\pages\\auth.js",["57","58","59"],"import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport axios from \"axios\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport {useKeycloak} from \"@react-keycloak/web\";\r\nimport {setToken} from \"../store/app/appSlice\";\r\n\r\nimport \"../scss/auth/auth-form.scss\"\r\n\r\nfunction Auth(props) {\r\n    const {keycloak, initialized} = useKeycloak();\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '3010',\r\n            password: '123456'\r\n        },\r\n        validate: (values) => {\r\n            const errors = {};\r\n\r\n            // if (!values.name) {\r\n            //     errors.name = 'Поле не может быть пустым';\r\n            // } else if (values.name.length < 4) {\r\n            //     errors.name = 'Имя должно быть не менее 4 символов';\r\n            // } else if (values.name.length > 20) {\r\n            //     errors.name = 'Имя должно быть не более 20 символов';\r\n            // }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Пароль не может быть пустым';\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Пароль должен быть не менее 6 символов';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: async (values) => {\r\n            const realm = keycloak.realm;\r\n            const clientId = keycloak.clientId;\r\n            const loginUri = process.env.REACT_APP_KEYCLOAK_URL + '/realms/' + realm + '/protocol/openid-connect/token';\r\n\r\n            let data = new URLSearchParams({\r\n                client_id: clientId,\r\n                grant_type: \"password\",\r\n                username: values.name,\r\n                password: values.password\r\n            });\r\n\r\n            console.log('data:', data);\r\n\r\n            const result = await axios.post(loginUri, data, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }\r\n            })\r\n                .then(res => res.data)\r\n            ;\r\n\r\n            if (result) {\r\n                console.log('result: ', result);\r\n\r\n                const tokens = {\r\n                    refreshToken: result.refresh_token,\r\n                    accessToken: result.access_token\r\n                };\r\n\r\n                localStorage.setItem('tokens', JSON.stringify(tokens));\r\n                dispatch(setToken(tokens));\r\n            }\r\n\r\n            // history.push('/wallets');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <form className=\"auth-form form\" onSubmit={formik.handleSubmit}>\r\n                <div className=\"heading-block\">\r\n                    <AccountBoxIcon className=\"auth-logo\"/>\r\n                    <h1>Авторизация</h1>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <PersonIcon/>\r\n\r\n                    <div className={`form-control ${formik.touched.name ? (formik.errors.name ? \"error\" : \"success\") : \"\"}`}>\r\n                        <input className=\"form-input\"\r\n                            id=\"name\"\r\n                            placeholder=\"Введите имя\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.name}\r\n                        />\r\n\r\n                        {(formik.touched.name && formik.errors.name) ? (\r\n                            <div className=\"form-error\">{formik.errors.name}</div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <LockIcon/>\r\n\r\n                    <div className={`form-control ${formik.touched.password ? (formik.errors.password ? \"error\" : \"success\") : \"\"}`}>\r\n                        <input className=\"form-input\"\r\n                               id=\"password\"\r\n                               type=\"password\"\r\n                               placeholder=\"Введите пароль\"\r\n                               onChange={formik.handleChange}\r\n                               onBlur={formik.handleBlur}\r\n                               value={formik.values.password}\r\n                        />\r\n\r\n                        {(formik.touched.password && formik.errors.password) ? (\r\n                            <div className=\"form-error\">{formik.errors.password}</div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form__btn-group\">\r\n                    <button type=\"submit\" className=\"auth-form-btn\">Войти</button>\r\n\r\n                    <button className=\"auth-form-btn\" onClick={() => keycloak.login()}>Войти keycloak</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n","C:\\projects\\keycloak-auth\\src\\pages\\home.js",[],"C:\\projects\\keycloak-auth\\src\\pages\\profile.js",[],"C:\\projects\\keycloak-auth\\src\\components\\common\\LoaderBrice\\index.js",[],"C:\\projects\\keycloak-auth\\src\\containers\\Header.js",["60","61"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useKeycloak} from \"@react-keycloak/web\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setToken} from \"../store/app/appSlice\";\r\n\r\nfunction Header(props) {\r\n    const {keycloak, initialized} = useKeycloak();\r\n    const tokens = useSelector(state => state.app.token);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('tokens');\r\n        dispatch(setToken(null));\r\n        keycloak.logout();\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink>\r\n            <NavLink className=\"nav-link\" to=\"/auth\">Auth</NavLink>\r\n\r\n            <button onClick={handleLogout}>LOGOUT</button>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"70","line":13,"column":11,"nodeType":"68","messageId":"69","endLine":13,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":15,"column":11,"nodeType":"68","messageId":"69","endLine":15,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":2,"column":9,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"66","severity":1,"message":"73","line":2,"column":22,"nodeType":"68","messageId":"69","endLine":2,"endColumn":33},{"ruleId":"66","severity":1,"message":"72","line":3,"column":9,"nodeType":"68","messageId":"69","endLine":3,"endColumn":20},{"ruleId":"66","severity":1,"message":"74","line":16,"column":22,"nodeType":"68","messageId":"69","endLine":16,"endColumn":33},{"ruleId":"66","severity":1,"message":"70","line":19,"column":11,"nodeType":"68","messageId":"69","endLine":19,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":8,"column":22,"nodeType":"68","messageId":"69","endLine":8,"endColumn":33},{"ruleId":"66","severity":1,"message":"75","line":9,"column":11,"nodeType":"68","messageId":"69","endLine":9,"endColumn":17},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'options' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'initialized' is assigned a value but never used.","'tokens' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]